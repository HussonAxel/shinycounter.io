/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NewHuntRouteImport } from './routes/newHunt'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TypeTypeRouteImport } from './routes/type/$type'
import { Route as TalentTalentRouteImport } from './routes/talent/$talent'
import { Route as PokemonPokemonRouteImport } from './routes/pokemon/$pokemon'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as DemoConvexRouteImport } from './routes/demo.convex'
import { Route as DemoClerkRouteImport } from './routes/demo.clerk'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const NewHuntRoute = NewHuntRouteImport.update({
  id: '/newHunt',
  path: '/newHunt',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TypeTypeRoute = TypeTypeRouteImport.update({
  id: '/type/$type',
  path: '/type/$type',
  getParentRoute: () => rootRouteImport,
} as any)
const TalentTalentRoute = TalentTalentRouteImport.update({
  id: '/talent/$talent',
  path: '/talent/$talent',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonPokemonRoute = PokemonPokemonRouteImport.update({
  id: '/pokemon/$pokemon',
  path: '/pokemon/$pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoConvexRoute = DemoConvexRouteImport.update({
  id: '/demo/convex',
  path: '/demo/convex',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoClerkRoute = DemoClerkRouteImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/newHunt': typeof NewHuntRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pokemon/$pokemon': typeof PokemonPokemonRoute
  '/talent/$talent': typeof TalentTalentRoute
  '/type/$type': typeof TypeTypeRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/newHunt': typeof NewHuntRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pokemon/$pokemon': typeof PokemonPokemonRoute
  '/talent/$talent': typeof TalentTalentRoute
  '/type/$type': typeof TypeTypeRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/newHunt': typeof NewHuntRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/convex': typeof DemoConvexRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pokemon/$pokemon': typeof PokemonPokemonRoute
  '/talent/$talent': typeof TalentTalentRoute
  '/type/$type': typeof TypeTypeRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/newHunt'
    | '/demo/clerk'
    | '/demo/convex'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/pokemon/$pokemon'
    | '/talent/$talent'
    | '/type/$type'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/newHunt'
    | '/demo/clerk'
    | '/demo/convex'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/pokemon/$pokemon'
    | '/talent/$talent'
    | '/type/$type'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/newHunt'
    | '/demo/clerk'
    | '/demo/convex'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/pokemon/$pokemon'
    | '/talent/$talent'
    | '/type/$type'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NewHuntRoute: typeof NewHuntRoute
  DemoClerkRoute: typeof DemoClerkRoute
  DemoConvexRoute: typeof DemoConvexRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PokemonPokemonRoute: typeof PokemonPokemonRoute
  TalentTalentRoute: typeof TalentTalentRoute
  TypeTypeRoute: typeof TypeTypeRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/demo-names'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/demo-names'
  id: '__root__' | '/api/demo-names'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/newHunt': {
      id: '/newHunt'
      path: '/newHunt'
      fullPath: '/newHunt'
      preLoaderRoute: typeof NewHuntRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/type/$type': {
      id: '/type/$type'
      path: '/type/$type'
      fullPath: '/type/$type'
      preLoaderRoute: typeof TypeTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/talent/$talent': {
      id: '/talent/$talent'
      path: '/talent/$talent'
      fullPath: '/talent/$talent'
      preLoaderRoute: typeof TalentTalentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemon/$pokemon': {
      id: '/pokemon/$pokemon'
      path: '/pokemon/$pokemon'
      fullPath: '/pokemon/$pokemon'
      preLoaderRoute: typeof PokemonPokemonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/convex': {
      id: '/demo/convex'
      path: '/demo/convex'
      fullPath: '/demo/convex'
      preLoaderRoute: typeof DemoConvexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NewHuntRoute: NewHuntRoute,
  DemoClerkRoute: DemoClerkRoute,
  DemoConvexRoute: DemoConvexRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PokemonPokemonRoute: PokemonPokemonRoute,
  TalentTalentRoute: TalentTalentRoute,
  TypeTypeRoute: TypeTypeRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
